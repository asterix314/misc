#import "template.typ": template, menu

#show: template

= 外部数据同步

*应使用“数据集成”功能进行外部数据库的接入*。有“实时同步”和“定时同步”两种方式。如果是内部数据的同步或ETL操作，则应使用“数据开发”功能。

== 实时同步

进入数据集成页面，注意切换到正确的项目空间（“正式环境”），点击#menu([新建同步任务])按钮，在弹框中选择实时同步后，点击确定按钮，即可新建实时同步任务。

“实时同步”将源端的数据变化实时地同步至目的端。此功能使用的是变更数据捕获（CDC）技术#footnote[变更数据捕获（CDC）：通过监控数据库日志或其他机制，捕捉到数据的每一次变化（增删改操作），然后将这些变化以结构化的方式提供给下游系统，如数据仓库、消息队列、流处理引擎等，实现数据的实时同步和分析。
]，数据变化的时延一般在秒级。注意需要源数据库开启CDC设置且连接账户有适当的权限，且#highlight[源数据表定义了主键]。

尽管实时同步任务支持同时包含多个表（@fig:实时同步多个表），但是为了方便监控和重跑等操作，仍然建议*一个表建一个任务，任务名称即目的表名称*。目的表名前缀可在“前缀设置”中指定（外部数据应落地在ODS层，故前缀一般为“`ODS_`”）。

#figure(
  rect(image("img/实时同步多个表.png", width: 80%)),
  caption: [实时同步多个表],
) <实时同步多个表>

*目的表结构不需要事先建好*。在任务设置中勾选“自动新建表”后将根据输入的表名以及所选字段在目的库自动创建表结构。当然如果已有目的表结构则不要勾选“自动新建表”。

一般来说应尽可能保留源表字段以备日后需要。但有些源表字段特别占用空间（如MySQL的`longtext`和`blob`等）且暂时没有明确的用处，也可不进行同步。实时同步默认同步所有字段的数据，也支持按需指定字段。进入实时同步任务的编辑页面，在“字段内容”栏内点击“编辑内容与策略”，然后在弹框中勾选需要同步数据的字段即可（@fig:实时同步字段裁剪）。

#figure(
  rect(image("img/实时同步字段裁剪.png", width: 80%)),
  caption: [实时同步字段裁剪],
) <实时同步字段裁剪>

*字段一律勾选`etl_time`（由系统额外添加的输出信息：目的表数据写入/更新时间）*。这是因为后续数据加工过程可能会用到`etl_time`进行增量更新。

如果来源表的结构发生变化，如新增字段、修改字段类型、删除字段等，还可选择目的表结构是否跟踪这些变化。在实时同步任务的编辑页面，切换到高级配置标签页，按需勾选下方的3个选项（是否同步来源数据字段的新增、变化、和删除）即可。

配置完成后，点击右上角发布按钮。发布成功后，可在#menu([运维中心], [实时集成任务])页面查看到该任务状态处于进行中，并采集到了数据。点击#menu([异常日志])可查看运行报错信息。

=== 异常处理

#figure(
  rect(image("img/text_too_long.png", width: 80%)),
  caption: [the length of input string too long],
) <text_too_long>

同步`longtext`等长字符串时，可能偶尔会遇到`the length of input string too long`（@fig:text_too_long）的错误。这是因为源字段的数据长度超过了目的表对应字段的限制。比如doris的`string`类型默认只支持最大1MB大小。可通过调整doris的`string_type_length_soft_limit`参数将`string`的最大长度调整为2GB（系统管理员操作）。

== 定时同步

“定时同步”也叫离线同步，它按照定制的调度计划，定时获取源端数据变化并同步至目的端。*调度的最小周期为一分钟*。定时同步不要求源数据表定义主键。

定时同步的设置方式和实时同步有很多类似的地方。

#figure(
  rect(image("img/设置定时同步内容与规则.png", width: 80%)),
  caption: [设置定时同步内容与规则],
) <设置定时同步内容与规则>



通过“唯一字段”判断采集数据在目的表中是否已存在，如果存在则以“唯一字段”为条件进行更新。系统内设置的`auto-uuid`字段，由所有字段数据以下划线分隔的方式组合后算出hash值。建议该字段不要与其它字段同时勾选。


自动增量

按条件增量



== 同步开发库与生产库（TODO）