#import "template.typ": template, menu

#show: template

= 数据开发(TODO)

创建数据加工任务，定时处理数据。
创建数据加工任务，定期执行数据处理，向目标表产出所需数据。
该示例中我们创建一个名为“销售订单数据加工-近实时”的数据流水线，在该流水线内，添加5个SQL类型的数据加工任务。
首先创建数据流水线。进入数据开发页面，在左侧选中数据流水线标签页


切换回到该数据流水线的编辑画布页面（可在顶部标签页中切换，或在左侧目录树中双击该流水线名称），继续拖动SQL类型的组件，直到5个SQL任务全部创建完成，在画布中出现5个任务节点。以下附5个SQL任务的SQL语句（可双击图标后使用文本编辑器打开）：

验证目标表的数据是否已产出。
进入数据开发页面，切换到数据表标签页下，鼠标移到目标表名称上，点击表详情图标，在弹框中切换到数据预览页面，查看该表已经有了数据。

```sql
insert into
    dw${env}.DWD_GYL_CGBJBIDDING --采购报价竞价表
    (
        id, --主键ID
        bjbm, --报价编码
        publish, --是否发布标志
        zdsj, --制单时间
        zdr, --制单人编码
        quotationdate, --报价日期
        ip, --竞价的IP地址
        etl_time --数据更新时间
    )
select
    id, --主键ID
    bjbm, --报价编码
    publish, --是否发布标志
    zdsj, --制单时间
    zdr, --制单人编码
    quotationdate, --报价日期
    ip, --竞价的IP地址
    etl_time --数据更新时间
from
    ods${env}.ODS_CG_CGBJBIDDING
where
    etl_time > timestampadd (minute, -2, now ());
```

*如何在SQL任务中快速编写SQL语句*

在数据开发的过程中，经常使用SQL类型的任务来处理数据，SQL代码中读写的数据表通常拥有数十上百的字段，人工编写代码耗时费力、容易出错。可使用快捷功能加速SQL代码编写过程。

在SQL任务的编辑页面，点击左侧数据表标签页，定位到SQL代码中需要读写的数据表；鼠标移到表名称上方后出现功能图标，点击表详情图标后弹出字段信息页面，选中所需字段后点击复制select语句或复制insert语句，即可快速复制包含字段和表的SQL语句，可直接粘贴到编辑中的SQL任务中使用。

*如何让数据加工任务在数据同步完成后及时运行*

在对平台中的数据做加工时，数据加工任务在什么时间点触发运行很重要，通常有两点诉求：一是在任务运行时需要确保待处理的来源数据已经准备就绪，而是希望任务触发运行的时间越早越好（保障数据及时产出）。

如果数据来源为实时同步的数据，下游数据加工任务只需按照业务需求，设置定时调度即可，因为实时同步的数据延迟较低（秒级别），任务运行时读取的数据已经是最新完整的数据。

如果数据来源为离线同步的数据，则建议将数据加工任务和离线数据同步任务建立上下游依赖关系，当离线同步任务完成后触发加工任务运行。该场景下建议使用数据开发中的数据离线同步组件完成数据同步，以便可跟下游加工任务构建依赖调度关系，而不是数据集成页面中的定时同步功能。

进入数据开发页面，打开对应数据流水线的画布编辑页面，拖动创建类型为数据离线同步的组件，完成任务配置后，将其与下游数据加工任务连线，形成上下游依赖关系。


*使用变量来实现任务运行时的动态传参*

对于周期调度执行的数据加工任务，通常需要动态传参来运行，常见的例如每次运行时传入日期参数来过滤数据。

系统内置支持常见的日期变量，在编辑SQL等类型任务时，可在工具栏中点击变量说明进行查看。

例如以下SQL任务中，在SQL代码中指定了日期变量\${system.biz.date}，任务将在每次运行时自动替换变量的值为实例运行时的前一天，格式为yyyyMMdd，例如20240505。

*数据探查功能中为什么有些SQL语句不能执行*

数据探查功能，仅为了方便用户查询生产环境的数据，但为了保护生产环境的数据不被随意修改，平台禁用了drop、alter、delete等修改数据库表结构或数据的SQL语句，目前仅支持select、desc、show、explain等查询类SQL语句。
